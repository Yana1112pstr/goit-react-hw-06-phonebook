{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const myPhonebookSlice = createSlice({\n  name: \"phonebook\",\n  initialState: {\n    contacts: [],\n    filter: \"\"\n  },\n  reducers: {\n    addContacts(state, action) {\n      state.contacts.push(action.payload);\n    },\n\n    deleteContacts(state, action) {\n      state.contacts = state.contacts.filter(contact => contact.id !== action.payload);\n    },\n\n    filterContacts(state, action) {\n      state.filter = action.payload;\n    }\n\n  }\n});\nexport const {\n  addContacts,\n  deleteContacts,\n  filterContacts\n} = myPhonebookSlice.actions;","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/redux/contacts/slice.js"],"names":["createSlice","myPhonebookSlice","name","initialState","contacts","filter","reducers","addContacts","state","action","push","payload","deleteContacts","contact","id","filterContacts","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAGD,WAAW,CAAC;AACxCE,EAAAA,IAAI,EAAE,WADkC;AAExCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,MAAM,EAAE;AAFE,GAF0B;AAMxCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACJ,QAAN,CAAeM,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACH,KAHK;;AAINC,IAAAA,cAAc,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACJ,QAAN,GAAiBI,KAAK,CAACJ,QAAN,CAAeC,MAAf,CACbQ,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACE,OADpB,CAAjB;AAGH,KARK;;AASNI,IAAAA,cAAc,CAACP,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACE,OAAtB;AACH;;AAXK;AAN8B,CAAD,CAApC;AAqBP,OAAO,MAAM;AAAEJ,EAAAA,WAAF;AAAeK,EAAAA,cAAf;AAA+BG,EAAAA;AAA/B,IAAkDd,gBAAgB,CAACe,OAAzE","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const myPhonebookSlice = createSlice({\n    name: \"phonebook\",\n    initialState: {\n        contacts: [],\n        filter: \"\"\n    },\n    reducers: {\n        addContacts(state, action) {\n            state.contacts.push(action.payload);\n        },\n        deleteContacts(state, action) {\n            state.contacts = state.contacts.filter(\n                contact => contact.id !== action.payload\n            );\n        },\n        filterContacts(state, action) {\n            state.filter = action.payload;\n        },\n    }\n});\n\nexport const { addContacts, deleteContacts, filterContacts } = myPhonebookSlice.actions;"]},"metadata":{},"sourceType":"module"}