{"ast":null,"code":"var _jsxFileName = \"/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/phoneForm/PhoneForm.js\",\n    _s = $RefreshSig$();\n\nimport MyButton from \"components/UI/button/MyButton\";\nimport MyInput from \"components/UI/input/MyInput\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContacts } from \"redux/contacts/slice\";\nimport s from \"./PhoneForm.module.css\";\nimport toast from \"react-hot-toast\";\nimport { getContacts } from \"redux/contacts/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhoneForm = () => {\n  _s();\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    number: \"\"\n  });\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const toAddContact = e => {\n    e.preventDefault();\n    const newContact = { ...contact,\n      id: Date.now()\n    };\n    contacts.some(contact => contact.name === name) ? toast.error(\"your phonebook has this contact\") : dispatch(addContacts(newContact));\n    setContact({\n      name: \"\",\n      number: \"\"\n    });\n    toast.success(\"Created new contact!\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.myForm,\n    onSubmit: toAddContact,\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      required: true,\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      value: contact.name,\n      onChange: e => setContact({ ...contact,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      required: true,\n      type: \"text\",\n      placeholder: \"number\",\n      name: \"number\",\n      value: contact.number,\n      onChange: e => setContact({ ...contact,\n        number: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhoneForm, \"VEYC2IBiJ0Q33EduSHYfLj9iBDA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PhoneForm;\nexport default PhoneForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneForm\");","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/phoneForm/PhoneForm.js"],"names":["MyButton","MyInput","React","useState","useSelector","useDispatch","addContacts","s","toast","getContacts","PhoneForm","contact","setContact","name","number","contacts","dispatch","toAddContact","e","preventDefault","newContact","id","Date","now","some","error","success","myForm","target","value"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAUC,WAAV,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CAAtC;AAEA,QAAMC,QAAQ,GAAGX,WAAW,CAACK,WAAD,CAA5B;AAEA,QAAMO,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAG,EACjB,GAAGT,OADc;AAEjBU,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFa,KAAnB;AAIAR,IAAAA,QAAQ,CAACS,IAAT,CAAcb,OAAO,IAAIA,OAAO,CAACE,IAAR,KAAiBA,IAA1C,IAAmDL,KAAK,CAACiB,KAAN,CAAY,iCAAZ,CAAnD,GACAT,QAAQ,CAACV,WAAW,CAACc,UAAD,CAAZ,CADR;AAEAR,IAAAA,UAAU,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAD,CAAV;AACAN,IAAAA,KAAK,CAACkB,OAAN,CAAc,sBAAd;AACD,GAVD;;AAYA,sBACE;AAAM,IAAA,SAAS,EAAEnB,CAAC,CAACoB,MAAnB;AAA2B,IAAA,QAAQ,EAAEV,YAArC;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,MAHd;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAEN,OAAO,CAACE,IALjB;AAME,MAAA,QAAQ,EAAGK,CAAD,IAAON,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcE,QAAAA,IAAI,EAAEK,CAAC,CAACU,MAAF,CAASC;AAA7B,OAAD;AAN7B;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,OAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,QAHd;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,KAAK,EAAElB,OAAO,CAACG,MALjB;AAME,MAAA,QAAQ,EAAGI,CAAD,IAAON,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcG,QAAAA,MAAM,EAAEI,CAAC,CAACU,MAAF,CAASC;AAA/B,OAAD;AAN7B;AAAA;AAAA;AAAA;AAAA,YATF,eAiBE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxCD;;GAAMnB,S;UAGaN,W,EAEAC,W;;;KALbK,S;AA0CN,eAAeA,SAAf","sourcesContent":["import MyButton from \"components/UI/button/MyButton\";\nimport MyInput from \"components/UI/input/MyInput\";\nimport React, { useState } from \"react\";\nimport {  useSelector, useDispatch } from \"react-redux\";\nimport { addContacts } from \"redux/contacts/slice\";\nimport s from \"./PhoneForm.module.css\";\nimport toast from \"react-hot-toast\";\nimport { getContacts } from \"redux/contacts/selectors\";\n\nconst PhoneForm = () => {\n  const [contact, setContact] = useState({ name: \"\", number: \"\" });\n\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const toAddContact = (e) => {\n    e.preventDefault();\n    const newContact = {\n      ...contact,\n      id: Date.now(),\n    };\n    contacts.some(contact => contact.name === name) ? (toast.error(\"your phonebook has this contact\")) :\n    dispatch(addContacts(newContact))\n    setContact({ name: \"\", number: \"\" });\n    toast.success(\"Created new contact!\");\n  };\n\n  return (\n    <form className={s.myForm} onSubmit={toAddContact}>\n      <MyInput\n        required\n        type=\"text\"\n        placeholder=\"name\"\n        name=\"name\"\n        value={contact.name}\n        onChange={(e) => setContact({ ...contact, name: e.target.value })}\n      />\n      <MyInput\n        required\n        type=\"text\"\n        placeholder=\"number\"\n        name=\"number\"\n        value={contact.number}\n        onChange={(e) => setContact({ ...contact, number: e.target.value })}\n      />\n      <MyButton type=\"submit\">Add contact</MyButton>\n    </form>\n  );\n};\n\nexport default PhoneForm;\n"]},"metadata":{},"sourceType":"module"}