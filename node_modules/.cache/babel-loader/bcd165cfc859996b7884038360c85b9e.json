{"ast":null,"code":"import MyButton from\"components/UI/button/MyButton\";import React from\"react\";import s from\"./ContactsList.module.css\";import{useSelector,useDispatch}from\"react-redux\";import{getContacts,getFilter}from\"redux/contacts/selectors\";import{deleteContacts}from\"redux/contacts/slice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactsList=function ContactsList(){var contacts=useSelector(getContacts);var filter=useSelector(getFilter);var dispatch=useDispatch();var filteredContacts=contacts.filter(function(contact){return contact.name.toLowerCase().includes(filter.toLowerCase())||contact.number.includes(filter);});return/*#__PURE__*/_jsxs(\"table\",{className:s.table,children:[/*#__PURE__*/_jsx(\"thead\",{className:s.thead,children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"n\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Contact\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Number\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Delete\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredContacts.map(function(contact,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{textAlign:\"center\"},children:index+1}),/*#__PURE__*/_jsx(\"td\",{style:{textAlign:\"center\"},children:contact.name}),/*#__PURE__*/_jsx(\"td\",{style:{textAlign:\"center\"},children:contact.number}),/*#__PURE__*/_jsx(\"td\",{style:{textAlign:\"center\"},children:/*#__PURE__*/_jsx(MyButton,{onClick:function onClick(){return dispatch(deleteContacts(contact.id));},children:\"Delete contact\"})})]},contact.id);})})]});};export default ContactsList;","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/contactsList/ContactsList.js"],"names":["MyButton","React","s","useSelector","useDispatch","getContacts","getFilter","deleteContacts","ContactsList","contacts","filter","dispatch","filteredContacts","contact","name","toLowerCase","includes","number","table","thead","map","index","textAlign","id"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,+BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,2BAAd,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,CAAsBC,SAAtB,KAAuC,0BAAvC,CACA,OAASC,cAAT,KAA+B,sBAA/B,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAEzB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,CAACE,WAAD,CAA5B,CACA,GAAMK,CAAAA,MAAM,CAAGP,WAAW,CAACG,SAAD,CAA1B,CACA,GAAMK,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,gBAAgB,CAAGH,QAAQ,CAACC,MAAT,CAAgB,SAAAG,OAAO,QAAIA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,MAAM,CAACK,WAAP,EAApC,GAA6DF,OAAO,CAACI,MAAR,CAAeD,QAAf,CAAwBN,MAAxB,CAAjE,EAAvB,CAAzB,CAEE,mBACI,eAAO,SAAS,CAAER,CAAC,CAACgB,KAApB,wBACE,cAAO,SAAS,CAAEhB,CAAC,CAACiB,KAApB,uBACE,mCACE,yBADF,cAEE,+BAFF,cAGE,8BAHF,cAIE,8BAJF,GADF,EADF,cASE,uBACGP,gBAAgB,CAACQ,GAAjB,CAAqB,SAACP,OAAD,CAAUQ,KAAV,qBACpB,mCACE,WAAI,KAAK,CAAE,CAACC,SAAS,CAAC,QAAX,CAAX,UAAkCD,KAAK,CAAC,CAAxC,EADF,cAEE,WAAI,KAAK,CAAE,CAACC,SAAS,CAAC,QAAX,CAAX,UAAkCT,OAAO,CAACC,IAA1C,EAFF,cAGE,WAAI,KAAK,CAAE,CAACQ,SAAS,CAAC,QAAX,CAAX,UAAkCT,OAAO,CAACI,MAA1C,EAHF,cAIE,WAAI,KAAK,CAAE,CAACK,SAAS,CAAC,QAAX,CAAX,uBAAiC,KAAC,QAAD,EAAU,OAAO,CAAE,yBAAMX,CAAAA,QAAQ,CAACJ,cAAc,CAACM,OAAO,CAACU,EAAT,CAAf,CAAd,EAAnB,4BAAjC,EAJF,GAASV,OAAO,CAACU,EAAjB,CADoB,EAArB,CADH,EATF,GADJ,CAsBD,CA9BH,CAgCA,cAAef,CAAAA,YAAf","sourcesContent":["import MyButton from \"components/UI/button/MyButton\";\nimport React from \"react\";\nimport s from \"./ContactsList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts, getFilter } from \"redux/contacts/selectors\";\nimport { deleteContacts } from \"redux/contacts/slice\";\n\nconst ContactsList = () => {\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()) || contact.number.includes(filter));\n\n    return (\n        <table className={s.table}>\n          <thead className={s.thead}>\n            <tr>\n              <th>n</th>\n              <th>Contact</th>\n              <th>Number</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredContacts.map((contact, index) => (\n              <tr key={contact.id}>\n                <td style={{textAlign:\"center\"}}>{index+1}</td>\n                <td style={{textAlign:\"center\"}}>{contact.name}</td>\n                <td style={{textAlign:\"center\"}}>{contact.number}</td>\n                <td style={{textAlign:\"center\"}}><MyButton onClick={() => dispatch(deleteContacts(contact.id))}>Delete contact</MyButton></td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n    );\n  };\n\nexport default ContactsList;\n"]},"metadata":{},"sourceType":"module"}