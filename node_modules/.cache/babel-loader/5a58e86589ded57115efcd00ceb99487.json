{"ast":null,"code":"var _jsxFileName = \"/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/phoneForm/PhoneForm.js\",\n    _s = $RefreshSig$();\n\nimport MyButton from \"components/UI/button/MyButton\";\nimport MyInput from \"components/UI/input/MyInput\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"redux/contacts/selectors\";\nimport { addContacts } from \"redux/contacts/slice\";\nimport s from \"./PhoneForm.module.css\";\nimport toast from \"react-hot-toast\"; // const PhoneForm = ({ createContact }) => {\n//   const [contact, setContact] = useState({ name: \"\", number: \"\" });\n//   const toAddContact = (e) => {\n//     e.preventDefault();\n//     const newContact = {\n//       ...contact,\n//       id: Date.now(),\n//     };\n//     createContact(newContact);\n//     // console.log(newContact)\n//     setContact({ name: \"\", number: \"\" });\n//   };\n//   return (\n//     <form className={s.myForm} onSubmit={toAddContact}>\n//       <MyInput\n//         required\n//         type=\"text\"\n//         placeholder=\"name\"\n//         name=\"name\"\n//         value={contact.name}\n//         onChange={(e) => setContact({ ...contact, name: e.target.value })}\n//       />\n//       <MyInput\n//         required\n//         type=\"text\"\n//         placeholder=\"number\"\n//         name=\"number\"\n//         value={contact.number}\n//         onChange={(e) => setContact({ ...contact, number: e.target.value })}\n//       />\n//       <MyButton type=\"submit\">Add contact</MyButton>\n//     </form>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhoneForm = () => {\n  _s();\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    number: \"\"\n  });\n  const contacts = useSelector(getContacts);\n  console.log(contacts);\n  const dispatch = useDispatch();\n\n  const toAddContact = e => {\n    e.preventDefault();\n    const newContact = { ...contact,\n      id: Date.now()\n    };\n    contacts.some(contact => contact.name === name) ? alert(`${name} is already in contacts`) : dispatch(addContacts(newContact)); // console.log(newContact)\n\n    setContact({\n      name: \"\",\n      number: \"\"\n    });\n    toast.success(\"Created new contact!\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.myForm,\n    onSubmit: toAddContact,\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      required: true,\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      value: contact.name,\n      onChange: e => setContact({ ...contact,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      required: true,\n      type: \"text\",\n      placeholder: \"number\",\n      name: \"number\",\n      value: contact.number,\n      onChange: e => setContact({ ...contact,\n        number: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhoneForm, \"VEYC2IBiJ0Q33EduSHYfLj9iBDA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PhoneForm;\nexport default PhoneForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneForm\");","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/phoneForm/PhoneForm.js"],"names":["MyButton","MyInput","React","useState","useSelector","useDispatch","getContacts","addContacts","s","toast","PhoneForm","contact","setContact","name","number","contacts","console","log","dispatch","toAddContact","e","preventDefault","newContact","id","Date","now","some","alert","success","myForm","target","value"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CAAtC;AAEA,QAAMC,QAAQ,GAAGX,WAAW,CAACE,WAAD,CAA5B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAG,EACjB,GAAGX,OADc;AAEjBY,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFa,KAAnB;AAIAV,IAAAA,QAAQ,CAACW,IAAT,CAAcf,OAAO,IAAIA,OAAO,CAACE,IAAR,KAAiBA,IAA1C,IACIc,KAAK,CAAE,GAAEd,IAAK,yBAAT,CADT,GAEIK,QAAQ,CAACX,WAAW,CAACe,UAAD,CAAZ,CAFZ,CAN0B,CAS1B;;AACAV,IAAAA,UAAU,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAD,CAAV;AACAL,IAAAA,KAAK,CAACmB,OAAN,CAAc,sBAAd;AACD,GAZD;;AAcA,sBACE;AAAM,IAAA,SAAS,EAAEpB,CAAC,CAACqB,MAAnB;AAA2B,IAAA,QAAQ,EAAEV,YAArC;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,MAHd;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAER,OAAO,CAACE,IALjB;AAME,MAAA,QAAQ,EAAGO,CAAD,IAAOR,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcE,QAAAA,IAAI,EAAEO,CAAC,CAACU,MAAF,CAASC;AAA7B,OAAD;AAN7B;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,OAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,QAHd;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,KAAK,EAAEpB,OAAO,CAACG,MALjB;AAME,MAAA,QAAQ,EAAGM,CAAD,IAAOR,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcG,QAAAA,MAAM,EAAEM,CAAC,CAACU,MAAF,CAASC;AAA/B,OAAD;AAN7B;AAAA;AAAA;AAAA;AAAA,YATF,eAiBE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1CD;;GAAMrB,S;UAGaN,W,EAEAC,W;;;KALbK,S;AA4CN,eAAeA,SAAf","sourcesContent":["import MyButton from \"components/UI/button/MyButton\";\nimport MyInput from \"components/UI/input/MyInput\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"redux/contacts/selectors\";\nimport { addContacts } from \"redux/contacts/slice\";\nimport s from \"./PhoneForm.module.css\";\nimport toast from \"react-hot-toast\";\n\n// const PhoneForm = ({ createContact }) => {\n//   const [contact, setContact] = useState({ name: \"\", number: \"\" });\n\n//   const toAddContact = (e) => {\n//     e.preventDefault();\n//     const newContact = {\n//       ...contact,\n//       id: Date.now(),\n//     };\n//     createContact(newContact);\n//     // console.log(newContact)\n//     setContact({ name: \"\", number: \"\" });\n//   };\n\n//   return (\n//     <form className={s.myForm} onSubmit={toAddContact}>\n//       <MyInput\n//         required\n//         type=\"text\"\n//         placeholder=\"name\"\n//         name=\"name\"\n//         value={contact.name}\n//         onChange={(e) => setContact({ ...contact, name: e.target.value })}\n//       />\n//       <MyInput\n//         required\n//         type=\"text\"\n//         placeholder=\"number\"\n//         name=\"number\"\n//         value={contact.number}\n//         onChange={(e) => setContact({ ...contact, number: e.target.value })}\n//       />\n//       <MyButton type=\"submit\">Add contact</MyButton>\n//     </form>\n//   );\n// };\n\nconst PhoneForm = () => {\n  const [contact, setContact] = useState({ name: \"\", number: \"\" });\n\n  const contacts = useSelector(getContacts);\n  console.log(contacts);\n  const dispatch = useDispatch();\n\n  const toAddContact = (e) => {\n    e.preventDefault();\n    const newContact = {\n      ...contact,\n      id: Date.now(),\n    };\n    contacts.some(contact => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContacts(newContact))\n    // console.log(newContact)\n    setContact({ name: \"\", number: \"\" });\n    toast.success(\"Created new contact!\");\n  };\n\n  return (\n    <form className={s.myForm} onSubmit={toAddContact}>\n      <MyInput\n        required\n        type=\"text\"\n        placeholder=\"name\"\n        name=\"name\"\n        value={contact.name}\n        onChange={(e) => setContact({ ...contact, name: e.target.value })}\n      />\n      <MyInput\n        required\n        type=\"text\"\n        placeholder=\"number\"\n        name=\"number\"\n        value={contact.number}\n        onChange={(e) => setContact({ ...contact, number: e.target.value })}\n      />\n      <MyButton type=\"submit\">Add contact</MyButton>\n    </form>\n  );\n};\n\nexport default PhoneForm;\n"]},"metadata":{},"sourceType":"module"}