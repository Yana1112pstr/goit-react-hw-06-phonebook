{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, filterContacts } from \"./actions\";\nconst initialState = {\n  contacts: [],\n  filter: \"\"\n};\nconst reducer = createReducer(initialState, builder => {\n  builder.addCase(addContact, (state, action) => {\n    const {\n      id,\n      name,\n      number\n    } = action.payload;\n    state.contacts.push({\n      id,\n      name,\n      number\n    });\n  }).addCase(deleteContact, (state, action) => {\n    const {\n      id\n    } = action.payload;\n    const index = state.contacts.findIndex(contact => contact.id === id);\n    state.contacts.splice(index);\n  }).addCase(filterContacts, (state, action) => {\n    const {\n      filter\n    } = action.payload;\n    state.contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()) || contact.number.includes(filter));\n  });\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/redux/reducers.js"],"names":["createReducer","addContact","deleteContact","filterContacts","initialState","contacts","filter","reducer","builder","addCase","state","action","id","name","number","payload","push","index","findIndex","contact","splice","toLowerCase","includes"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,cAApC,QAA0D,WAA1D;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,MAAMC,OAAO,GAAGP,aAAa,CAACI,YAAD,EAAgBI,OAAD,IAAa;AACvDA,EAAAA,OAAO,CACJC,OADH,CACWR,UADX,EACuB,CAACS,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAAuBH,MAAM,CAACI,OAApC;AACAL,IAAAA,KAAK,CAACL,QAAN,CAAeW,IAAf,CAAoB;AAAEJ,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAApB;AACD,GAJH,EAKGL,OALH,CAKWP,aALX,EAK0B,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAASD,MAAM,CAACI,OAAtB;AACA,UAAME,KAAK,GAAGP,KAAK,CAACL,QAAN,CAAea,SAAf,CAA0BC,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeA,EAArD,CAAd;AACAF,IAAAA,KAAK,CAACL,QAAN,CAAee,MAAf,CAAsBH,KAAtB;AACD,GATH,EAUGR,OAVH,CAUWN,cAVX,EAU2B,CAACO,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAM;AAACL,MAAAA;AAAD,QAAWK,MAAM,CAACI,OAAxB;AACAL,IAAAA,KAAK,CAACL,QAAN,CAAeC,MAAf,CAAsBa,OAAO,IAAGA,OAAO,CAACN,IAAR,CAAaQ,WAAb,GAA2BC,QAA3B,CAAoChB,MAAM,CAACe,WAAP,EAApC,KAA6DF,OAAO,CAACL,MAAR,CAAeQ,QAAf,CAAwBhB,MAAxB,CAA7F;AACH,GAbH;AAcD,CAf4B,CAA7B;AAiBA,eAAeC,OAAf","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, filterContacts } from \"./actions\";\n\nconst initialState = {\n  contacts: [],\n  filter: \"\"\n};\n\nconst reducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(addContact, (state, action) => {\n      const { id, name, number } = action.payload;\n      state.contacts.push({ id, name, number });\n    })\n    .addCase(deleteContact, (state, action) => {\n      const { id } = action.payload;\n      const index = state.contacts.findIndex((contact) => contact.id === id);\n      state.contacts.splice(index);\n    })\n    .addCase(filterContacts, (state, action) => {\n        const {filter} = action.payload;\n        state.contacts.filter(contact =>contact.name.toLowerCase().includes(filter.toLowerCase()) || contact.number.includes(filter));\n    })\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}