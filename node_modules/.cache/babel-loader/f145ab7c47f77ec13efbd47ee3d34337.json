{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact } from \"./actions\";\nconst initialState = {\n  contacts: []\n};\nconst reducer = createReducer(initialState, builder => {\n  builder.addCase(addContact, (state, action) => {\n    const {\n      id,\n      name,\n      number\n    } = action.payload;\n    state.contacts.push({\n      id,\n      name,\n      number\n    });\n  }).addCase(deleteContact, (state, action) => {\n    const {\n      id\n    } = action.payload;\n    const index = state.contacts.findIndex(contact => contact.id === id);\n    state.contacts.splice(index);\n  });\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/redux/reducers.js"],"names":["createReducer","addContact","deleteContact","initialState","contacts","reducer","builder","addCase","state","action","id","name","number","payload","push","index","findIndex","contact","splice"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,WAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,MAAMC,OAAO,GAAGL,aAAa,CAACG,YAAD,EAAgBG,OAAD,IAAa;AACvDA,EAAAA,OAAO,CACJC,OADH,CACWN,UADX,EACuB,CAACO,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAAuBH,MAAM,CAACI,OAApC;AACAL,IAAAA,KAAK,CAACJ,QAAN,CAAeU,IAAf,CAAoB;AAAEJ,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAApB;AACD,GAJH,EAKGL,OALH,CAKWL,aALX,EAK0B,CAACM,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAASD,MAAM,CAACI,OAAtB;AACA,UAAME,KAAK,GAAGP,KAAK,CAACJ,QAAN,CAAeY,SAAf,CAA0BC,OAAD,IAAaA,OAAO,CAACP,EAAR,KAAeA,EAArD,CAAd;AACAF,IAAAA,KAAK,CAACJ,QAAN,CAAec,MAAf,CAAsBH,KAAtB;AACD,GATH;AAUD,CAX4B,CAA7B;AAaA,eAAeV,OAAf","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact } from \"./actions\";\n\nconst initialState = {\n  contacts: [],\n};\n\nconst reducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(addContact, (state, action) => {\n      const { id, name, number } = action.payload;\n      state.contacts.push({ id, name, number });\n    })\n    .addCase(deleteContact, (state, action) => {\n      const { id } = action.payload;\n      const index = state.contacts.findIndex((contact) => contact.id === id);\n      state.contacts.splice(index);\n    });\n});\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}