{"ast":null,"code":"import _objectSpread from\"/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import MyButton from\"components/UI/button/MyButton\";import MyInput from\"components/UI/input/MyInput\";import React,{useState}from\"react\";import{useDispatch}from\"react-redux\";import{addContacts}from\"redux/contacts/slice\";import s from\"./PhoneForm.module.css\";import toast from\"react-hot-toast\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PhoneForm=function PhoneForm(){var _useState=useState({name:\"\",number:\"\"}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var dispatch=useDispatch();var toAddContact=function toAddContact(e){e.preventDefault();var newContact=_objectSpread(_objectSpread({},contact),{},{id:Date.now()});dispatch(addContacts(newContact));// console.log(newContact)\nsetContact({name:\"\",number:\"\"});toast.success(\"Created new contact!\");};return/*#__PURE__*/_jsxs(\"form\",{className:s.myForm,onSubmit:toAddContact,children:[/*#__PURE__*/_jsx(MyInput,{required:true,type:\"text\",placeholder:\"name\",name:\"name\",value:contact.name,onChange:function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},{name:e.target.value}));}}),/*#__PURE__*/_jsx(MyInput,{required:true,type:\"text\",placeholder:\"number\",name:\"number\",value:contact.number,onChange:function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},{number:e.target.value}));}}),/*#__PURE__*/_jsx(MyButton,{type:\"submit\",children:\"Add contact\"})]});};export default PhoneForm;","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/phoneForm/PhoneForm.js"],"names":["MyButton","MyInput","React","useState","useDispatch","addContacts","s","toast","PhoneForm","name","number","contact","setContact","dispatch","toAddContact","e","preventDefault","newContact","id","Date","now","success","myForm","target","value"],"mappings":"6RAAA,MAAOA,CAAAA,QAAP,KAAqB,+BAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAUC,WAAV,KAA6B,aAA7B,CACA,OAASC,WAAT,KAA4B,sBAA5B,CACA,MAAOC,CAAAA,CAAP,KAAc,wBAAd,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,cAA8BL,QAAQ,CAAC,CAAEM,IAAI,CAAE,EAAR,CAAYC,MAAM,CAAE,EAApB,CAAD,CAAtC,wCAAOC,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,UAAU,gCACXN,OADW,MAEdO,EAAE,CAAEC,IAAI,CAACC,GAAL,EAFU,EAAhB,CAIAP,QAAQ,CAACR,WAAW,CAACY,UAAD,CAAZ,CAAR,CACA;AACAL,UAAU,CAAC,CAAEH,IAAI,CAAE,EAAR,CAAYC,MAAM,CAAE,EAApB,CAAD,CAAV,CACAH,KAAK,CAACc,OAAN,CAAc,sBAAd,EACD,CAVD,CAYA,mBACE,cAAM,SAAS,CAAEf,CAAC,CAACgB,MAAnB,CAA2B,QAAQ,CAAER,YAArC,wBACE,KAAC,OAAD,EACE,QAAQ,KADV,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,MAHd,CAIE,IAAI,CAAC,MAJP,CAKE,KAAK,CAAEH,OAAO,CAACF,IALjB,CAME,QAAQ,CAAE,kBAACM,CAAD,QAAOH,CAAAA,UAAU,gCAAMD,OAAN,MAAeF,IAAI,CAAEM,CAAC,CAACQ,MAAF,CAASC,KAA9B,GAAjB,EANZ,EADF,cASE,KAAC,OAAD,EACE,QAAQ,KADV,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,QAHd,CAIE,IAAI,CAAC,QAJP,CAKE,KAAK,CAAEb,OAAO,CAACD,MALjB,CAME,QAAQ,CAAE,kBAACK,CAAD,QAAOH,CAAAA,UAAU,gCAAMD,OAAN,MAAeD,MAAM,CAAEK,CAAC,CAACQ,MAAF,CAASC,KAAhC,GAAjB,EANZ,EATF,cAiBE,KAAC,QAAD,EAAU,IAAI,CAAC,QAAf,yBAjBF,GADF,CAqBD,CAtCD,CAwCA,cAAehB,CAAAA,SAAf","sourcesContent":["import MyButton from \"components/UI/button/MyButton\";\nimport MyInput from \"components/UI/input/MyInput\";\nimport React, { useState } from \"react\";\nimport {  useDispatch } from \"react-redux\";\nimport { addContacts } from \"redux/contacts/slice\";\nimport s from \"./PhoneForm.module.css\";\nimport toast from \"react-hot-toast\";\n\nconst PhoneForm = () => {\n  const [contact, setContact] = useState({ name: \"\", number: \"\" });\n\n  const dispatch = useDispatch();\n\n  const toAddContact = (e) => {\n    e.preventDefault();\n    const newContact = {\n      ...contact,\n      id: Date.now(),\n    };\n    dispatch(addContacts(newContact))\n    // console.log(newContact)\n    setContact({ name: \"\", number: \"\" });\n    toast.success(\"Created new contact!\");\n  };\n\n  return (\n    <form className={s.myForm} onSubmit={toAddContact}>\n      <MyInput\n        required\n        type=\"text\"\n        placeholder=\"name\"\n        name=\"name\"\n        value={contact.name}\n        onChange={(e) => setContact({ ...contact, name: e.target.value })}\n      />\n      <MyInput\n        required\n        type=\"text\"\n        placeholder=\"number\"\n        name=\"number\"\n        value={contact.number}\n        onChange={(e) => setContact({ ...contact, number: e.target.value })}\n      />\n      <MyButton type=\"submit\">Add contact</MyButton>\n    </form>\n  );\n};\n\nexport default PhoneForm;\n"]},"metadata":{},"sourceType":"module"}