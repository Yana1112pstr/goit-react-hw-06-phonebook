{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistReducer } from 'redux-persist';\nimport { persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { myPhonebookSlice } from \"./contacts/slice\";\nconst persistConfig = {\n  key: 'phonebook',\n  storage\n};\nexport const myPhonebookReducer = persistReducer(persistConfig, myPhonebookSlice.reducer);\nexport const store = configureStore({\n  reducer: {\n    phonebook: myPhonebookReducer\n  },\n\n  middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    });\n  }\n\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","myPhonebookSlice","persistConfig","key","myPhonebookReducer","reducer","store","phonebook","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SACIC,YADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,KAJJ,EAKIC,OALJ,EAMIC,KANJ,EAOIC,QAPJ,QAQS,eART;AASE,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,WADa;AAElBH,EAAAA;AAFkB,CAAtB;AAKA,OAAO,MAAMI,kBAAkB,GAAGZ,cAAc,CAC9CU,aAD8C,EAE9CD,gBAAgB,CAACI,OAF6B,CAAzC;AAKP,OAAO,MAAMC,KAAK,GAAGf,cAAc,CAAC;AAChCc,EAAAA,OAAO,EAAE;AACLE,IAAAA,SAAS,EAAEH;AADN,GADuB;;AAIhCI,EAAAA,UAAU,CAACC,oBAAD,EAAuB;AAC7B,WAAOA,oBAAoB,CAAC;AAC1BC,MAAAA,iBAAiB,EAAE;AACfC,QAAAA,cAAc,EAAE,CAACjB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADD;AADO,KAAD,CAA3B;AAKH;;AAV+B,CAAD,CAA5B;AAaP,OAAO,MAAMa,SAAS,GAAGnB,YAAY,CAACa,KAAD,CAA9B","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { persistReducer } from 'redux-persist';\nimport {\n    persistStore,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n  } from 'redux-persist';\n  import storage from 'redux-persist/lib/storage';\n  import { myPhonebookSlice } from \"./contacts/slice\";\n\n  const persistConfig = {\n      key: 'phonebook',\n      storage,\n  }\n\n  export const myPhonebookReducer = persistReducer(\n    persistConfig,\n    myPhonebookSlice.reducer\n  );\n\n  export const store = configureStore({\n      reducer: {\n          phonebook: myPhonebookReducer,\n      },\n      middleware(getDefaultMiddleware) {\n          return getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n              },\n          })\n      }\n  });\n\n  export const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}