{"ast":null,"code":"import _toConsumableArray from\"/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import Header from\"./header/Header\";import PhoneForm from\"./phoneForm/PhoneForm\";import toast,{Toaster}from\"react-hot-toast\";import ContactsList from\"./contactsList/ContactsList\";import PhoneFilter from\"./phoneFilter/PhoneFilter\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var App=function App(){var _useState=useState([{id:\"id-1\",name:\"Rosie Simpson\",number:\"459-12-56\"},{id:\"id-2\",name:\"Hermione Kline\",number:\"443-89-12\"},{id:\"id-3\",name:\"Eden Clements\",number:\"645-17-79\"},{id:\"id-4\",name:\"Annie Copeland\",number:\"227-91-26\"}]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];useEffect(function(){var currentContacts=JSON.parse(localStorage.getItem(\"contacts\"));if(currentContacts){setContacts(currentContacts);}},[]);useEffect(function(){localStorage.setItem(\"contacts\",JSON.stringify(contacts));},[contacts]);var toCreateContact=function toCreateContact(newContact){setContacts([].concat(_toConsumableArray(contacts),[newContact]));toast.success(\"Created new contact!\");};var toDeleteContact=function toDeleteContact(id){setContacts(contacts.filter(function(contact){return contact.id!==id;}));toast.success(\"Deleted contact!\");};var toFindContact=function toFindContact(){return contacts.filter(function(contact){return contact.name.toLowerCase().includes(filter.toLowerCase())||contact.number.includes(filter);});};var newArrayContacts=toFindContact();// console.log(newArrayContacts);\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{margin:\"10px\"},children:[/*#__PURE__*/_jsx(Toaster,{position:\"top-center\",reverseOrder:false}),/*#__PURE__*/_jsx(Header,{props:\"Phone book\"}),/*#__PURE__*/_jsx(PhoneForm,{createContact:toCreateContact}),/*#__PURE__*/_jsx(PhoneFilter,{filter:filter,setFilter:setFilter}),/*#__PURE__*/_jsx(ContactsList,{contacts:newArrayContacts,deleteContact:toDeleteContact})]});};","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-06-phonebook/src/components/App.js"],"names":["React","useState","useEffect","Header","PhoneForm","toast","Toaster","ContactsList","PhoneFilter","App","id","name","number","contacts","setContacts","filter","setFilter","currentContacts","JSON","parse","localStorage","getItem","setItem","stringify","toCreateContact","newContact","success","toDeleteContact","contact","toFindContact","toLowerCase","includes","newArrayContacts","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./header/Header\";\nimport PhoneForm from \"./phoneForm/PhoneForm\";\nimport toast, {Toaster} from \"react-hot-toast\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport PhoneFilter from \"./phoneFilter/PhoneFilter\";\n\nexport const App = () => {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const currentContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (currentContacts) {\n      setContacts(currentContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const toCreateContact = (newContact) => {\n    setContacts([...contacts, newContact]);\n    toast.success(\"Created new contact!\");\n  };\n\n  const toDeleteContact = (id) => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n    toast.success(\"Deleted contact!\");\n  }\n\n  const toFindContact = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()) || contact.number.includes(filter));\n  }\n  const newArrayContacts = toFindContact();\n  // console.log(newArrayContacts);\n\n  return (\n    <div style={{margin:\"10px\"}}>\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      <Header props=\"Phone book\" />\n      <PhoneForm createContact={toCreateContact} />\n      <PhoneFilter filter={filter} setFilter={setFilter}/>\n      <ContactsList contacts={newArrayContacts} deleteContact={toDeleteContact}/>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}